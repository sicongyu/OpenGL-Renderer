#version 410 core

// Interpolated values from the vertex shaders
uniform mat4 view_proj_inv_mat;
uniform samplerCube env_map;

// Ouput data
out vec3 color;

vec3 getPosition(vec2 uv){
  float depth = 1.0f;
  vec3 ndc = 2.0 * vec3(uv, depth) - 1.0;
  vec4 P = view_proj_inv_mat * vec4(ndc, 1.0); 
  P.xyz /= P.w;
  return P.xyz;
}

void main(){

	// Output color = color specified in the vertex shader, 
	// interpolated between all 3 surrounding vertices
	vec2 uv = gl_FragCoord.xy / vec2(1024, 768);
	color = vec3(uv, 0.0f);

	vec3 dir = getPosition(uv);
	color = textureLod(env_map, dir, 0).rgb;
	color = pow(color,vec3(0.45));
	
}