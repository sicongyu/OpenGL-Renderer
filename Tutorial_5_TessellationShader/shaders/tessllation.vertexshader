#version 410 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 vertexNormal_modelspace;
layout(location = 3) in vec3 vertexBinormal_modelspace;
layout(location = 4) in vec3 vertexTangent_modelspace;

// Output data ; will be interpolated for each fragment.

out VertexData
{
	vec3 vertexPosition_modelspace;
	vec2 vertexUV;
	vec3 vertexNormal_modelspace;
	vec3 vertexBinormal_modelspace;
	vec3 vertexTangent_modelspace;
	
}VertexOut;



// Values that stay constant for the whole mesh.


void main(){

	VertexOut.vertexUV = vertexUV;
	VertexOut.vertexNormal_modelspace = vertexNormal_modelspace;
	VertexOut.vertexBinormal_modelspace = vertexBinormal_modelspace;
	VertexOut.vertexTangent_modelspace = vertexTangent_modelspace;
	
	VertexOut.vertexPosition_modelspace = vertexPosition_modelspace;
	
	
}

